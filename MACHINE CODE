    #include <WiFiClient.h>
    #include <ESP8266WebServer.h>
    String command;             //String to store
    app command state.
    int speedCar = 800;         // 400 â€“ 1023
     int speed_Coeff = 3;
     const char* ssid = "Make DIY";
     ESP8266WebServer server(80);
    {
     void setup()
    {
      pinMode(ENA, OUTPUT);  
      pinMode(ENB, OUTPUT);
      pinMode(IN_1, OUTPUT)
      pinMode(IN_2, OUTPUT);
      pinMode(IN_3, OUTPUT);
      pinMode(IN_4, OUTPUT); 
      Serial.begin(115200);            //Connecting WiFi 
      WiFi.mode(WIFI_AP);  
      WiFi.softAP(ssid); 
      IPAddress myIP = WiFi.softAPIP();   
      Serial.print("AP IP address: ");      
      analogWrite(ENA, speedCar);  
      digitalWrite(IN_3, LOW);   
      digitalWrite(IN_4, HIGH); 
      analogWrite(ENB, speedCar);
     }
  Void goBack(){
     digitalWrite(IN_1, LOW);
     digitalWrite(IN_2, HIGH);
     analogWrite(ENA, speedCar); 
     digitalWrite(IN_3, LOW); 
     digitalWrite(IN_4, HIGH);  
     analogWrite(ENB, speedCar);
  }
 void goRight(){   
    digitalWrite(IN_1, HIGH);
    void goLeft()
{    
  digitalWrite(IN_1, LOW);   
   digitalWrite(IN_2, HIGH);     

     analogWrite(ENB, speedCar);  
}
void goAheadRight(){
    digitalWrite(IN_1, LOW); 
     digitalWrite(IN_2, HIGH);
      analogWrite(ENA, speedCar/speed_Coeff); 
      digitalWrite(IN_3, LOW);
      DigitalWrite(IN_4, HIGH); 
     analogWrite(ENB, speedCar); 
  }
void goAheadLeft()
{  
     digitalWrite(IN_1, LOW); 
      digitalWrite(IN_2, HIGH);   
      analogWrite(ENA, speedCar); 
      digitalWrite(IN_3, LOW);      
      digitalWrite(IN_4, HIGH); 
     analogWrite(ENB, speedCar/speed_Coeff);  
     analogWrite(ENB, speedCar);  
  }
 void goBackLeft(){
          digitalWrite(IN_1, HIGH); 
          digitalWrite(IN_2, LOW);
          analogWrite(ENA, speedCar);
          digitalWrite(IN_3, HIGH); 
          digitalWrite(IN_4, LOW);  
          analogWrite(ENB, speedCar/speed_Coeff);
  } 
  void stopRobot(){ 
           digitalWrite(IN_1, LOW);   
           digitalWrite(IN_2, LOW);   
           analogWrite(ENA, speedCar);   
           digitalWrite(IN_3, LOW);  
           digitalWrite(IN_4, LOW);  
           analogWrite(ENB, speedCar);
   }
  void loop() {   
         server.handleClient();
         command = server.arg("State");
          if (command == "F") goAhead();
          else if (command == "B") goBack();
          else if (command == "L") goLeft();
          else if (command == "R") goRight();   
          else if (command == "I") goAheadRight(); 
          else if (command == "G") goAheadLeft();
          else if (command == "J") goBackRight();
          else if (command == "H") goBackLeft();
          else if (command == "0") speedCar = 400;  
          else if (command == "1") speedCar = 470;
          else if (command == "2") speedCar = 540;
          else if (command == "3") speedCar = 610;   
          else if (command == "4") speedCar = 680;    
          else if (command == "5") speedCar = 750;
          else if (command == "6") speedCar = 820; 
       else if (command == "7") speedCar = 890;
       else if (command == "8") speedCar = 960;  
       else if (command == "9") speedCar = 1023;  
       else if (command == "S") stopRobot();
}
void HTTP_handleRoot(void) 
{
        if( server.hasArg("State") )
        {       
              Serial.println(server.arg("State")); 
              }
  server.send ( 200, "text/html", "" ); 
 delay(1);
}
          


